import { IImageJpegInfo, JpegInfo } from "./jpeg_info";
import { type IImagePngInfo, PngInfo } from "./png_info";

export enum ColorNames {
  DeviceGray = 1,
  DeviceRGB = 3,
  DeviceCMYK = 4,
}

export enum ImageTypes {
  PNG,
  JPEG,
}

export type ColorSpace = keyof typeof ColorNames;

export type ImageInfo = IImagePngInfo | IImageJpegInfo;

/**
 * Базовый интерфейс изображения.
 */
export interface IBaseImage {
  /**
   *  Буфер изображения.
   */
  buf: Uint8Array;
  /**
   * Информация об изображении.
   */
  info: IBaseInfo;
}

/**
 * Базовая информация об изображении.
 */
export interface IBaseInfo {
  /**
   *  Количество бит на компонент.
   */
  bitsPerComponent: number;
  /**
   * Ширина изображения.
   */
  width: number;
  /**
   * Высота изображения.
   */
  height: number;
  /**
   * Цветовое пространство изображения.
   */
  colorSpace: ColorSpace;
}

export abstract class ImageAnalyzer {
  /**
   * Получает изображение на основе буфера изображения.
   * @param buf Буфер изображения.
   * @returns Изображение в формате ImagePng или ImageJpeg.
   */
  public static getImageInfo(buf: Uint8Array): ImageInfo {
    try {
      return JpegInfo.getInfo(buf);
    } catch (errorJPEG) {
      try {
        return PngInfo.getInfo(buf);
      } catch (errorPNG) {
        throw new Error(`Невозможно получить данные изображения: ${errorJPEG}; ${errorPNG}`);
      }
    }
  }
}
