/**
 * Ключ - ID правила.
 * Значение - массив изменений по правилу в документе.
 */
export type LogRules = { [key: string]: Array<Record>; };
/**
 * Запись изменения.
 */
export type Record = { [key: string]: string | number | boolean | Array<string | number>; };

/**
 * Класс логирования изменений в документе.
 */
export class Logger {
  /**
   * Записи изменений.
   */
  public records: LogRules = {};

  /**
   * Возвращает количество записей в логе.
   * @returns
   */
  public size(): number {
    return Object.values(this.records).reduce((total, values) => total + values.length, 0);
  }

  /**
   * Очистка лога.
   */
  public clear(): void {
    this.records = {};
  }

  /**
 * Добавление записи.
 * @param key - Ключ для записи.
 * @param value - Значение записи.
 */
  public addValue(key: string, value: Record): void {
    // Проверяем, существует ли уже Map для записей с ключом "key"
    if (this.records[key]) {
      // Если существует, добавляем значение в массив
      this.records[key].push(value);
    } else {
      // Если не существует, создаем новую запись в виде массива и добавляем значение
      this.records[key] = [value];
    }
  }
}
