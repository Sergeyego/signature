import { IPdfFlagsParams, PdfFlags } from "../../syntax/objects/flags";

export class PdfFontFlags extends PdfFlags<typeof FontFlags>{
  public constructor(options?: IPdfFlagsParams<typeof FontFlags>) {
    super(FontFlags, options);
  }
}

export enum FontFlags {
  /**
   * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).
   */
  FixedPitch = 1 << 0,
  /**
   * Glyphs have serifs, which are short strokes drawn at an angle on the topand bottom of glyph stems. (Sans serif fonts do not have serifs.)
   */
  Serif = 1 << 1,
  /**
   * Font contains glyphs outside the Standard Latin character set. This flagand the Nonsymbolic flag shall not both be set or both be clear.
   */
  Symbolic = 1 << 2,
  /**
   * Glyphs resemble cursive handwriting.
   */
  Script = 1 << 3,
  /**
   * Font uses the Standard Latin character set or a subset of it. This flag andthe Symbolic flag shall not both be set or both be clear.
   */
  Nonsymbolic = 1 << 5,
  /**
   * Glyphs have dominant vertical strokes that are slanted.
   */
  Italic = 1 << 6,
  /**
   * Font contains no lowercase letters; typically used for display purposes, such as for titles or headlines.
   */
  AllCap = 1 << 16,
  /**
   * Font contains both uppercase and lowercase letters. The uppercaseletters are similar to those in the regular version of the same typefacefamily. The glyphs for the lowercase letters have the same shapes as thecorresponding uppercase letters, but they are sized and their proportionsadjusted so that they have the same size and stroke weight as lowercaseglyphs in the same typeface family.
   */
  SmallCap = 1 << 17,
  /**
   * See description after Note 1 in this subclause.
   */
  ForceBold = 1 << 18,
}
